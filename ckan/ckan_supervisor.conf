; ===============================
; ckan harvester
; ===============================


[unix_http_server]
file=/tmp/supervisor.sock

[supervisord]
nodaemon=true
logfile=/dev/fd/1
logfile_maxbytes=0

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock

[program:ckan_gather_consumer]

command=ckan-paster --plugin=ckanext-harvest harvester gather_consumer --config=/etc/ckan/production.ini

; user that owns virtual environment.
user=root

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0
autostart=true
autorestart=true

[program:ckan_fetch_consumer]

command=ckan-paster --plugin=ckanext-harvest harvester fetch_consumer --config=/etc/ckan/production.ini

; user that owns virtual environment.
user=root

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0
autostart=true
autorestart=true

[program:ckan_harvester_run]

command=/bin/bash -c "sleep 2m && ckan-paster --plugin=ckanext-harvest harvester run --config=/etc/ckan/production.ini"
; user that owns virtual environment.
user=root

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0
autostart=true
autorestart=true

; =======================================================
; Supervisor configuration for CKAN background job worker
; =======================================================

[program:ckan-worker]

; Use the full paths to the virtualenv and your configuration file here.
command=/usr/local/bin/ckan -c /etc/ckan/production.ini jobs worker


; User the worker runs as.
user=root


; Start just a single worker. Increase this number if you have many or
; particularly long running background jobs.
numprocs=1
process_name=%(program_name)s-%(process_num)02d


; Log files.
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

; Make sure that the worker is started on system start and automatically
; restarted if it crashes unexpectedly.
autostart=true
autorestart=true


; Number of seconds the process has to run before it is considered to have
; started successfully.
startsecs=10

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
